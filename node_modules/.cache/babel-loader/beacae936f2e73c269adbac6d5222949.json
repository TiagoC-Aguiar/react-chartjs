{"ast":null,"code":"var _jsxFileName = \"/media/tiago/HD2T/ScriptsJS/react/chartjs/src/charts/LineChart.js\";\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js';\n\nconst LineChart = () => {\n  const ctx = 'myChart';\n  const [stateChart, setStteChart] = useState(null);\n  useEffect(() => {\n    const myChart = new Chart(ctx, {\n      tipe: 'line',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [{\n          label: 'Total de mensagens',\n          data: [12, 19, 3],\n          backgroundColor: ['rgba(255, 99, 132, .2)', 'rgba(54, 162, 235, .2)', 'rgba(255, 206, 86, .2)'],\n          borderColor: ['rgba(255, 99, 132, .2)', 'rgba(54, 162, 235, .2)', 'rgba(255, 206, 86, .2)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        color: ['#70C0D0'],\n        responsive: true,\n        legend: {\n          display: false\n        },\n        title: {\n          display: false,\n          text: 'Título',\n          fontColor: '#FFFFFF'\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: false\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              fontColor: \"white\",\n              beginAtZero: true\n            },\n            gridLines: {\n              zeroLineColor: '#00A0C0',\n              color: '#606163'\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              fontColor: \"white\",\n              beginAtZero: true\n            },\n            gridLines: {\n              zeroLineColor: '#00A0C0',\n              color: '#606163'\n            }\n          }]\n        }\n      }\n    });\n    setStteChart(myChart);\n  }, []);\n  return React.createElement(\"canvar\", {\n    id: \"myChart\",\n    width: \"400\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  });\n};\n\nexport default LineChart;","map":{"version":3,"sources":["/media/tiago/HD2T/ScriptsJS/react/chartjs/src/charts/LineChart.js"],"names":["React","useEffect","useState","Chart","LineChart","ctx","stateChart","setStteChart","myChart","tipe","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","color","responsive","legend","display","title","text","fontColor","tooltips","mode","intersect","hover","scales","yAxes","ticks","beginAtZero","gridLines","zeroLineColor","xAxes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,GAAG,GAAG,SAAZ;AAEA,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BL,QAAQ,CAAC,IAAD,CAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMO,OAAO,GAAG,IAAIL,KAAJ,CAAUE,GAAV,EAAe;AAC7BI,MAAAA,IAAI,EAAE,MADuB;AAE7BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CADJ;AAEJC,QAAAA,QAAQ,EAAE,CAAC;AACTC,UAAAA,KAAK,EAAE,oBADE;AAETH,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,CAFG;AAGTI,UAAAA,eAAe,EAAE,CACf,wBADe,EAEf,wBAFe,EAGf,wBAHe,CAHR;AAQTC,UAAAA,WAAW,EAAE,CACX,wBADW,EAEX,wBAFW,EAGX,wBAHW,CARJ;AAaTC,UAAAA,WAAW,EAAE;AAbJ,SAAD;AAFN,OAFuB;AAoB7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,CAAC,SAAD,CADA;AAEPC,QAAAA,UAAU,EAAE,IAFL;AAGPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AADH,SAHD;AAMPC,QAAAA,KAAK,EAAE;AACLD,UAAAA,OAAO,EAAE,KADJ;AAELE,UAAAA,IAAI,EAAE,QAFD;AAGLC,UAAAA,SAAS,EAAE;AAHN,SANA;AAWPC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,OADE;AAERC,UAAAA,SAAS,EAAE;AAFH,SAXH;AAeTC,QAAAA,KAAK,EAAE;AACHF,UAAAA,IAAI,EAAE,SADH;AAEHC,UAAAA,SAAS,EAAE;AAFR,SAfE;AAmBTE,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,CAAC;AACJC,YAAAA,KAAK,EAAE;AACHP,cAAAA,SAAS,EAAE,OADR;AAEHQ,cAAAA,WAAW,EAAE;AAFV,aADH;AAKJC,YAAAA,SAAS,EAAE;AACPC,cAAAA,aAAa,EAAE,SADR;AAEPhB,cAAAA,KAAK,EAAE;AAFA;AALP,WAAD,CADH;AAWJiB,UAAAA,KAAK,EAAE,CAAC;AACJJ,YAAAA,KAAK,EAAE;AACHP,cAAAA,SAAS,EAAE,OADR;AAEHQ,cAAAA,WAAW,EAAE;AAFV,aADH;AAKJC,YAAAA,SAAS,EAAE;AACPC,cAAAA,aAAa,EAAE,SADR;AAEPhB,cAAAA,KAAK,EAAE;AAFA;AALP,WAAD;AAXH;AAnBC;AApBoB,KAAf,CAAhB;AAgEAX,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,GAnEQ,EAmEN,EAnEM,CAAT;AAuEA,SACE;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA/ED;;AAiFA,eAAeJ,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Chart from 'chart.js'\n\nconst LineChart = () => {\n  const ctx = 'myChart'\n\n  const [stateChart, setStteChart] = useState(null)\n\n  useEffect(() => {\n\n    const myChart = new Chart(ctx, {\n      tipe: 'line',\n      data: {\n        labels: ['Red', 'Blue', 'Yellow'],\n        datasets: [{\n          label: 'Total de mensagens',\n          data: [12, 19, 3],\n          backgroundColor: [\n            'rgba(255, 99, 132, .2)',\n            'rgba(54, 162, 235, .2)',\n            'rgba(255, 206, 86, .2)',\n          ],\n          borderColor: [\n            'rgba(255, 99, 132, .2)',\n            'rgba(54, 162, 235, .2)',\n            'rgba(255, 206, 86, .2)',\n          ],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        color: ['#70C0D0'],\n        responsive: true,\n        legend: {\n          display: false,\n        },  \n        title: {\n          display: false,\n          text: 'Título',\n          fontColor: '#FFFFFF'\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: false,\n      },\n      hover: {\n          mode: 'nearest',\n          intersect: true\n      },\n      scales: {\n          yAxes: [{\n              ticks: {\n                  fontColor: \"white\",\n                  beginAtZero: true\n              },\n              gridLines: {\n                  zeroLineColor: '#00A0C0',\n                  color: '#606163',\n              }\n          }],\n          xAxes: [{\n              ticks: {\n                  fontColor: \"white\",\n                  beginAtZero: true\n              },\n              gridLines: {\n                  zeroLineColor: '#00A0C0',\n                  color: '#606163',\n              }\n          }]\n      }\n  \n      }\n    })\n    setStteChart(myChart)\n  }, [])\n\n\n\n  return (\n    <canvar id=\"myChart\" width=\"400\" height=\"400\" />\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}