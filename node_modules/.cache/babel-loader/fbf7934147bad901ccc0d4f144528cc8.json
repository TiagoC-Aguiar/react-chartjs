{"ast":null,"code":"var _jsxFileName = \"/media/tiago/HD2T/ScriptsJS/react/chartjs/src/charts/LineChart.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst LineChart = () => {\n  // const ctx = 'myChart'\n  // const [stateChart, setStteChart] = useState(null)\n  // useEffect(() => {\n  //   const myChart = new Chart(ctx, {\n  //     tipe: 'line',\n  //     data: {\n  //       labels: ['Red', 'Blue', 'Yellow'],\n  //       datasets: [{\n  //         label: 'Total de mensagens',\n  //         data: [12, 19, 3],\n  //         backgroundColor: [\n  //           'rgba(255, 99, 132, .2)',\n  //           'rgba(54, 162, 235, .2)',\n  //           'rgba(255, 206, 86, .2)',\n  //         ],\n  //         borderColor: [\n  //           'rgba(255, 99, 132, .2)',\n  //           'rgba(54, 162, 235, .2)',\n  //           'rgba(255, 206, 86, .2)',\n  //         ],\n  //         borderWidth: 1\n  //       }]\n  //     },\n  //     options: {\n  //       color: ['#70C0D0'],\n  //       responsive: true,\n  //       legend: {\n  //         display: false,\n  //       },  \n  //       title: {\n  //         display: false,\n  //         text: 'Título',\n  //         fontColor: '#FFFFFF'\n  //       },\n  //       tooltips: {\n  //         mode: 'index',\n  //         intersect: false,\n  //     },\n  //     hover: {\n  //         mode: 'nearest',\n  //         intersect: true\n  //     },\n  //     scales: {\n  //         yAxes: [{\n  //             ticks: {\n  //                 fontColor: \"white\",\n  //                 beginAtZero: true\n  //             },\n  //             gridLines: {\n  //                 zeroLineColor: '#00A0C0',\n  //                 color: '#606163',\n  //             }\n  //         }],\n  //         xAxes: [{\n  //             ticks: {\n  //                 fontColor: \"white\",\n  //                 beginAtZero: true\n  //             },\n  //             gridLines: {\n  //                 zeroLineColor: '#00A0C0',\n  //                 color: '#606163',\n  //             }\n  //         }]\n  //     }\n  //     }\n  //   })\n  //   setStteChart(myChart)\n  // }, [])\n  const canvas = useRef(null);\n  var myLineChart = new Chart(canvas.current, {\n    type: 'line',\n    data: {\n      labels: ['Título', 'ti1', 'ti2', 'ti3'],\n      datasets: [1, 3, 4, 9]\n    },\n    options: {\n      color: ['#7CD012']\n    }\n  });\n  return React.createElement(\"canvar\", {\n    ref: canvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  });\n};\n\nexport default LineChart;","map":{"version":3,"sources":["/media/tiago/HD2T/ScriptsJS/react/chartjs/src/charts/LineChart.js"],"names":["React","useEffect","useState","useRef","Chart","LineChart","canvas","myLineChart","current","type","data","labels","datasets","options","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,QAAMC,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB;AAEA,MAAII,WAAW,GAAG,IAAIH,KAAJ,CAAUE,MAAM,CAACE,OAAjB,EAA0B;AAC1CC,IAAAA,IAAI,EAAE,MADoC;AAE1CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,KAAlB,EAAyB,KAAzB,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAFN,KAFoC;AAM1CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,CAAC,SAAD;AADA;AANiC,GAA1B,CAAlB;AAYA,SACE;AAAQ,IAAA,GAAG,EAAER,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CA3FD;;AA6FA,eAAeD,SAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport Chart from 'chart.js'\n\nconst LineChart = () => {\n  // const ctx = 'myChart'\n\n  // const [stateChart, setStteChart] = useState(null)\n\n  // useEffect(() => {\n\n  //   const myChart = new Chart(ctx, {\n  //     tipe: 'line',\n  //     data: {\n  //       labels: ['Red', 'Blue', 'Yellow'],\n  //       datasets: [{\n  //         label: 'Total de mensagens',\n  //         data: [12, 19, 3],\n  //         backgroundColor: [\n  //           'rgba(255, 99, 132, .2)',\n  //           'rgba(54, 162, 235, .2)',\n  //           'rgba(255, 206, 86, .2)',\n  //         ],\n  //         borderColor: [\n  //           'rgba(255, 99, 132, .2)',\n  //           'rgba(54, 162, 235, .2)',\n  //           'rgba(255, 206, 86, .2)',\n  //         ],\n  //         borderWidth: 1\n  //       }]\n  //     },\n  //     options: {\n  //       color: ['#70C0D0'],\n  //       responsive: true,\n  //       legend: {\n  //         display: false,\n  //       },  \n  //       title: {\n  //         display: false,\n  //         text: 'Título',\n  //         fontColor: '#FFFFFF'\n  //       },\n  //       tooltips: {\n  //         mode: 'index',\n  //         intersect: false,\n  //     },\n  //     hover: {\n  //         mode: 'nearest',\n  //         intersect: true\n  //     },\n  //     scales: {\n  //         yAxes: [{\n  //             ticks: {\n  //                 fontColor: \"white\",\n  //                 beginAtZero: true\n  //             },\n  //             gridLines: {\n  //                 zeroLineColor: '#00A0C0',\n  //                 color: '#606163',\n  //             }\n  //         }],\n  //         xAxes: [{\n  //             ticks: {\n  //                 fontColor: \"white\",\n  //                 beginAtZero: true\n  //             },\n  //             gridLines: {\n  //                 zeroLineColor: '#00A0C0',\n  //                 color: '#606163',\n  //             }\n  //         }]\n  //     }\n  \n  //     }\n  //   })\n  //   setStteChart(myChart)\n  // }, [])\n\n  const canvas = useRef(null)\n\n  var myLineChart = new Chart(canvas.current, {\n    type: 'line',\n    data: {\n      labels: ['Título', 'ti1', 'ti2', 'ti3'],\n      datasets: [1, 3, 4, 9]\n    },\n    options: {\n      color: ['#7CD012']\n    }\n  })\n\n\n  return (\n    <canvar ref={canvas} />\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}